var path = require('path');
var create_iOSPlugin = require('./create_iOSPlugin');
var generate_iOSPluginZip = require('./generate_iOSPluginZip');
var generate_AndroidPluginZip = require('./generate_AndroidPluginZip');
var check_iOSConflict = require('./check_iOSConflict');
var utility = require('../utility');
var getObject = require("../error").getObject;

module.exports = function(args, callback) {
	callback = callback || function(err, result) {
		if (err) {
			//console.error('err', err);
		}
	};
	utility.writeJsonToStdout({
		pluginTask: true
	});
	if (!args.path) {
		args.path = utility.convertAbsolute.convert(".");
	}
	else {
		args.path = utility.convertAbsolute.convert(args.path);
	}
	switch (args.task) {
		case 'create_iOSPlugin':
			if (!args.playerPath) {
				args.playerPath = path.join(__dirname, '/../../bin/iOS_Player.zip');
			}
			utility.writeJsonMsgToStdout("Started to create iOS Plugin Project");
			create_iOSPlugin(args, callback);
			break;
		case 'generate_iOSPluginZip':
			utility.writeJsonMsgToStdout("Generating iOS plugin zip file");
			generate_iOSPluginZip(args);
			break;
		case 'generate_AndroidPluginZip':
			utility.writeJsonMsgToStdout("Generating Anroid plugin zip file");
			generate_AndroidPluginZip(args, callback);
			break;
		case 'check_iOSConflict':
			if (process.platform === "darwin")
				check_iOSConflict(args, callback);
			else
				utility.killProcess(getObject("platform.support", {
					msg: {
						platform: process.platform,
						msg: "'check_iOSConflict' task"
					}
				}));
			break;
		default:
			throw new Error('Unknown task: ' + args.task);
	}
};

/*
	function callbackExample(err, result){
		if(err){
			console.error(err);
		} else {
			console.log(result);
		}
	}
*/

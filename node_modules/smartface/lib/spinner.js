// spinner for busy waiting ..
var Spinner = (function() {
	var SPINNER = ['\\', '|', '/', '-'],
		save = '\033[s', // cursor position save.
		restore = '\033[u', // cursor position restore.
		movePos = '\033[$L;$CH', // move cursor. Line - Column
		hide = '\x1b[?25l', // cursor hide.
		show = '\x1b[?25h', // cursor show.
		backOne = '\033[1D',
		i = -1,
		_timer = null,
		_interval = 50;

	function start(opt) { // start spinner.
		process.stdout.write(hide);
		if (opt && opt.line && opt.col) {
			process.stdout.write(movePos.replace(/\$L|\$C/gm, function(match) { // set cursor position.
				switch (match) {
					case '$L':
						return opt.line;
						break;
					case '$C':
						return opt.col;
						break;
				}
			}));
		}
		if (opt && opt.interval) { // set interval.
			_interval = opt.interval;
		}
		_timer = setInterval(function() {

			process.stdout.write('\u001b[33m' + SPINNER[++i % 4] + '\u001b[39m');
			process.stdout.write(backOne);
		}, _interval);

	}

	function stop() { // stop spinner.
		if (_timer) {
			clearInterval(_timer);
			process.stdout.write(' '); // clear remain spinner
			process.stdout.write(show);
			_timer = null;
		}
	}
	return {
		start: start,
		stop: stop
	}
})();

module.exports = Spinner;
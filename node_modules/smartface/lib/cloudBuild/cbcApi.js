	const https = require("https");
	const SERVER_CONFIG = require("../configuration").SERVER;

	const OK = 200;

	function getLinkCloudBuildMachine(token, os) {
		return new Promise((resolve, reject) => {
			if (process.env.SMF_CBM_LINK ) {
						return resolve(process.env.SMF_CBM_LINK);
			}
			return resolve("207.254.60.114");	
			https.get({
				host: SERVER_CONFIG.cbc,
				path: "/build/"+os,
				headers: {
					Authorization: token
				}
				//port: 8080
			}, (res) => {
				// consume response body
				res.resume();
				var str = '';
				res.on('data', function(chunk) {
					str += chunk;
				});
				res.on('end', function() {
					if (res.statusCode === OK) {
						var link = str.substring(str.indexOf("//") + 2, str.indexOf("\n"));
						resolve(link);
					}
					else if (res.statusCode >= 500) {
						reject(new Error("statusCode: " + res.statusCode + " -> " + res.statusMessage));
					}
					else {
						reject(new Error("statusCode: " + res.statusCode + " -> " + (str ? str : res.statusMessage)));
					}
				});
			}).on('error', (e) => {
				reject(e);
			});
		});

	}


	module.exports = {
		getLinkCloudBuildMachine: getLinkCloudBuildMachine
	};

	/*
		getLinkCloudBuildMachine("token").then(link => {
		  console.log(link);
		}, err => {
		  throw err;
		});
		
	*/
	
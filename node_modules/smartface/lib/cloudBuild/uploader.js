const fs = require('fs');
var https = require('http');

const FormData = require('form-data');
//const forge = require("node-forge");

const OK = 200;

// upload to server.
/**
 * Upload files to server
 * @function upload
 * @param   {Array.string} array of files path that will be uploaded or field.
 * @param   {string} url that will be uploaded.
 * @param   {function} callback function err, response.
 * @returns { undefined } 
 */
function upload(filesOrFields, options) {

	var CRLF = '\r\n';
	var form = new FormData();
	var totalBytes = 0;
	var resolver, rejecter, resPromise;

	https = options.https || https;

	resPromise = new Promise((resolve, reject) => {
		resolver = resolve;
		rejecter = reject;
	});

	// files md5
	function formAppendFile(file) {
		return new Promise((resolve, reject) => {
			var fileStream = fs.createReadStream(file.path);
			//fileStream.on("data", onData);
			form.append(file.name, fileStream);
			//console.log("File: " + file);
			getFilesizeInBytes(file.path, (err, res) => {
				if (err)
					return reject(err);
				totalBytes += res;
				resolve({
					"path": file.path,
					"size": res
				});
			});
		});
	}

	function formAppendField(field) {
		return new Promise((resolve, reject) => {
			form.append(field.name, field.value);
			resolve(field);
		});
	}
	/*
    function onData(chunk) {
        proginfo.update(chunk.length);
    }
*/
	//get size of file that given.
	function getFilesizeInBytes(filename, callBack) {
		fs.stat(filename, (err, stats) => {
			if (err)
				return callBack(err);
			var fileSizeInBytes = stats["size"];
			callBack(null, fileSizeInBytes);
		});
	}

	// initializing upload call basic functions.
	function initilazeForUpload() {
		var promises = [];
		var tempPromise;
		filesOrFields.forEach(function(item) {
			if (item.path) {
				tempPromise = formAppendFile(item);
			}
			else {
				tempPromise = formAppendField(item);
			}
			promises.push(tempPromise);
		});

		Promise.all(promises).then(res => {
			startUpload();
		}, rejecter);

		return resPromise;
	}

	// now files ready for uploading ..
	function startUpload() {
		Object.assign(options.headers, form.getHeaders());
		var request = https.request(options);

		form.pipe(request);

		//console.time("Upload");
		request.on('response', function(res) {
			var str = '';
			res.on("data", function(chunk) {
				str += chunk;
			});
			res.on("end", function() {
				handleErrIfCodeIsNotOK(res.statusCode, str);
			});
		});

		request.on('error', function(err) {
			rejecter(err);
		});

	}

	// detecting errors for response status code
	function handleErrIfCodeIsNotOK(code, msg) {
		if (code !== OK) {
			if (code >= 500) {
				rejecter(new Error("Server Error -> " + code + " -> " + msg));
			}
			else {
				rejecter(new Error("Upload Error -> "+ code + " -> " + msg));
			}
		}
		else {
			resolver(msg);
		}
	}
	return initilazeForUpload();
}

module.exports = upload;

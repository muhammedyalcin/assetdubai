const spawn = require('child_process').spawn;
const spawnSync = require('child_process').spawnSync;
const os = require('os');

const _ = require('underscore');

const error = require('../error');
const checker = require('../check');

function gitClone(link, callback, dir) {
	checker.EnvDep.getGitPath(function(_gitCmd) {
		if (!_gitCmd) {
			_gitCmd = 'git';
		}
		wrapperGit(link, callback, dir, _gitCmd);
	});
}

function wrapperGit(link, callback, dir, gitCmd) { // git clone  link [dir].
	var buffer = '';
	var params = ['clone', link];
	var anyErr = false;
	dir && (params.push(dir));
	const child = spawn(gitCmd, params);
	child.stdout.on('data', function(data) {
		buffer += data;
	});
	child.stderr.on('data', function(_data) {
		buffer += _data;
	});
	child.on('close', function(code) {
		if (!anyErr) {
			if (buffer.search(/fatal:.*access/gmi) !== -1) {
				callback(error.getObject('network'));
			} else if (buffer.search(/fatal:|not found/gmi) !== -1) { // any errors
				callback(_.extend(error.getObject('sample.existingSample'), {
					"fullPath": dir
				}));
			} else {
				callback(null);
			}
		}
	});
	child.on('error', function(_err) {
		anyErr = true;
		callback(error.getObject('git'));
	});
}

module.exports = {
	gitClone: gitClone
};
/**
 * @file smfbuilder using - updated Androidmanifest.xml , - created config2.xml and - encrytion files, apk extrach & built.
 * @version 1.0.0
 * @requires module:publisher
 */
const globalData = require("./globalData");
const utility = require("./utility.js");
const error = require("./error");
const pluginTaskHandler = require('./plugin');
const checkpublishrules = require('./checkpublishrules');
const publish = require("./publisher");

const runner = {
	"checkProject": checkpublishrules.run
};

/**
 * This class hold private variables and has getter ,setter methods.
 * @class SmfModule
 * @return {Object} object that has  setter and getter methods.
 */
const SmfModule = (function() {
	/**
	 * task manager function.
	 * @method run
	 * @param {string} task name of task.
	 * @param {Config} config, configuration object.
	 * @memberof SmfModule
	 */
	function run(config, data) {
		if (typeof globalData.get("publishConfig") !== "undefined") {

			publish((err) => {
				errHandling(err);
				process.exit(0);
			});
		}
		else if (runner[config.task]) {
			runner[config.task](config);
		}
		else {
			pluginTaskHandler(config, function(err) {
				if(err)
				return errHandling({
					err: config.task + " Error",
					msg: err
				});
			});
		}
	}

	return {
		run: run
	};
})();

function errHandling(err) {
	if (err) {
		if (err.err) {
			utility.killProcess(err);
		}
		else {
			utility.killProcess(error.getObject("unexpected", {
				msg: {
					err: err + (err.stack ? ("\n\t" + err.stack) : "")
				}
			}));
		}
	}
}

module.exports = SmfModule;

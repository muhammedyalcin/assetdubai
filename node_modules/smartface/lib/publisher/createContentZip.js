const _ = require("lodash");

const Zipper = require('../zipper');
const globalData = require("../globalData");
const Des3 = require('../3des');

/**
 * Add fileto folder in the current Zipper object. 
 * @function createContentZip
 * @this Zipper
 * @param   {string} wsPath filename that will be added in current zipper.
 * @param   {object} options if you want zip to disk set targetPath,isDemo
 * @returns { Promise } promise with zipper object.
 */
function createContentZip(wsPath, options) {
    var zipper = new Zipper();
    var des3 = new Des3();
    // root = "/home/ubuntu/workspace/workspace/";
    var config_json = _.cloneDeep(globalData.get("processedArgs.config_json"));
    const TMP_DIR = globalData.get("moduleGlobals.tmpdir");

    delete config_json.config.rau;
    delete config_json.build;

    var configJSONStr = JSON.stringify(config_json);
    var projectJSONPath = "config/project.json";

    if (!options.isDemo) {
        configJSONStr = des3.encryptStrWith3DES_ECB(configJSONStr, options.key);
    }

    zipper.addEditFile(projectJSONPath, configJSONStr);
    //zipper.addFileToFolder("defaults.xml", wsPath + "/config/defaults.xml", "config");
    zipper.addFilesFromFolderToFolder("fonts", wsPath + "/config/Fonts");
    zipper.addFolderToFolder("assets", wsPath + "/assets");
    zipper.addFolderToFolder("images", wsPath + "/images");
    zipper.addFolderToFolder("scripts", TMP_DIR + "/scripts");
    //console.dir(zipper);

    return new Promise(function(resolve, reject) {
        if (options && options.targetPath) {
            zipper.createZip(options.targetPath).then(function(res){
                resolve(res);
            },function(err){
                reject(err);
            });
        }else{
            resolve(zipper);
        }
    });
}

module.exports = createContentZip;
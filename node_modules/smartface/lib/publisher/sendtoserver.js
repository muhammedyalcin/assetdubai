const utility = require('../utility');
const uploader = require("./uploader");
const SERVER_CONFIG = require("../configuration").SERVER;

function getsendToServer(options, token, callBack) {
  var uploadNum = 0;
  var uploadOneArr = [];

  if (options.android) {
    ++uploadNum;
    uploadOneArr.push(uploadOne(options.apks,
      getUploadOptions(options.androidPID, token, options.type)));
  }
  if (options.iOS) {
    ++uploadNum;
    uploadOneArr.push(uploadOne(options.ipas,
      getUploadOptions(options.iosPID, token, options.type)));
  }

  function uploadOutputs(_callBack) {
    if (uploadOneArr.length > 0) {
      Promise.all(uploadOneArr).then(res => {
        _callBack(null);
      }, _callBack);
    }
    else {
      _callBack(null);
    }
  }

  function uploadOne(willBeUploadedFiles, options) {
    return new Promise((resolve, reject) => {
      utility.writeJsonMsgToStdout('Preparing output files...');
      uploader(willBeUploadedFiles, options, () => {
        utility.writeJsonToStdout({
          msg: "uploaded successfully.",
          responseDone: true,
          allDone: false
        });
        resolve(null);
      });
    });
  }
  
  uploadOutputs(callBack);

}

function getUploadOptions(pid, token, type) {
  var host_ = SERVER_CONFIG.enterpriseapi;
  var path_ = (type === "test" ? "/api/v2/testdistributions/" : "/api/v2/appstore/profiles/upload/" ) + pid;
  var options = {
    host: host_,
    path: path_,
    headers: {
      Authorization: token
    },
    method: "post"
  };
  return options;
}


module.exports = getsendToServer;

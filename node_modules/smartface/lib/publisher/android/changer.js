const fs = require('fs');
const path = require('path');
const _ = require('underscore');
const recursive = require('recursive-readdir');
const async = require('async');
const utility = require('../../utility');

function SearcherAndChanger(rootFolder, regExpFolder, regExpSearch, changerObj, callBack) {
	const files = fs.readdirSync(rootFolder);
	const q = async.queue(function(_file, _callBackSearch) { // worker for changing.
		fs.readFile(_file, 'utf8', function(err, data) {
			if (err) {
				_callBackSearch(null);
			}
			else if (data) {
				const _changedFile = data.replace(regExpSearch, function(_match) {
					return changerObj[_match];
				});
				fs.writeFile(_file, _changedFile, 'utf8', function() {
					_callBackSearch(null);
				});
			}
			else {
				_callBackSearch(null);
			}
		});
	}, 20);

	q.drain = function() {
		callBack();
	};

	searchFolders(); // start process.

	function readDirs(_callBack) { // read dirs by the regExpFolder
		var res = [];
		var loopCount = 0;
		_.each(files, function(item) {
			if (item.match(regExpFolder)) {
				const itemPath = path.join(rootFolder, item);
				recursive(itemPath, function(err, file_results) {
					if (err) {
						utility.throwsNoSuchDir(itemPath);
					}
					++loopCount;
					res = res.concat(file_results);
					if (loopCount === files.length) {
						return _callBack(res);
					}
				});
			}
			else {
				++loopCount;
			}
		});
	}

	function searchFolders() {
		readDirs(function(_list) {
			q.push(_list);
		});
	}
}

module.exports = SearcherAndChanger;

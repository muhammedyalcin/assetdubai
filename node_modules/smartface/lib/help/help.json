{
	"usage": "smfc [options]",
	"description": "Smartface Command-Line Interface",
	"options": {
		"help": {
			"short": "-h",
			"long": "--help",
			"value": "<options or tasks>",
			"description": "General help",
			"deepDescription": "General help.\n\tIf no value is given, default help screen is shown.\n\tIf a value is given, more details about that task or attribute are shown.",
			"example": "smfc --help=task"
		},
		"interactive": {
			"short": "-i",
			"long": "--interactive",
			"value": "",
			"description": "Smartface Command-Line Interface in interactive mode",
			"deepDescription": "Smartface Command-Line Interface in interactive mode",
			"example": "smfc -i"
		},
		"task": {
			"short": "-t",
			"long": "--task",
			"value": "<task>",
			"description": "Task to execute",
			"deepDescription": "Task to execute",
			"example": "--task=publish:iOS,Android"
		},
		"projectRoot": {
			"short": "-r",
			"long": "--projectRoot",
			"value": "<root path>",
			"description": "Target project's root folder",
			"deepDescription": "Target project's root folder",
			"example": "--projectRoot=../smfc-sample"
		},
		"path": {
			"short": "-r",
			"long": "--path",
			"value": "<plugin project path>",
			"description": "Target plugin project's root folder",
			"deepDescription": "Target plugin project's root folder",
			"example": "--path=../plugin_sample"
		},
		"licenseFile": {
			"short": "-l",
			"long": "--licenseFile",
			"value": "<license file path>",
			"description": "Your Smartface license file path",
			"deepDescription": "Your Smartface license file path. If none is given, 'Smartface Demo' license is used.",
			"example": "--licenseFile=C:/Users/user/license.xml"
		},
		"java": {
			"short": "-j",
			"long": "--java",
			"value": "<java exec path>",
			"description": "Java 1.8 path",
			"deepDescription": "Java 1.8 path\n\tAndroid requires Java 1.8 for decompilation, compilation, and signing of apk files.\n\tIf no input is given, program will try to guess the best possible option.",
			"example": "--java=java"
		},
		"androidPlayer": {
			"short": "-a",
			"long": "--androidPlayer",
			"value": "<player zip>",
			"description": "Smartface Android Player zip",
			"deepDescription": "Smartface Android Player zip",
			"example": "--androidPlayer=bin/SmartfacePlayer.zip"
		},
		"iosPlayer": {
			"short": "-z",
			"long": "--iosPlayer",
			"value": "<ios player>",
			"description": "Smartface iOS Player zip",
			"deepDescription": "Smartface iOS Player zip",
			"example": "--iosPlayer=bin/SmartfacePlayer.zip"
		},
		"maxJavaMemory": {
			"short": "-m",
			"long": "--maxJavaMemory",
			"value": "<memory size>",
			"description": "Maximum amount of memory to be consumed by Java",
			"deepDescription": "Maximum amount of memory to be consumed by Java.\n\tAndroid publish processes may wish to consume RAM that may be greater than what is available in the host environment.\nThis is not an issue for most laptop or desktop environments, but more for Virtual Machines where RAM may be limited to 512 MB.",
			"example": "--maxJavaMemory=1024m"
		},
		"Xmx": {
			"short": "-x",
			"long": "--Xmx",
			"value": "<memory size>",
			"description": "Maximum amount of memory to be consumed by Java",
			"deepDescription": "Maximum amount of memory to be consumed by Java.\n\tAndroid  generate plugin zip processes may wish to consume RAM that may be greater than what is available in the host environment.\nThis is not an issue for most laptop or desktop environments, but more for Virtual Machines where RAM may be limited to 512 MB.",
			"example": "--Xmx=1024m"
		},
		"logLevel": {
			"short": "-l",
			"long": "--logLevel",
			"value": "<level>",
			"description": "Log Level",
			"deepDescription": "Log Level.\n\tDetermines the verbosity level of logging.\n\tLog Levels: all, debug, info, warn, error, fatal, off",
			"example": "--logLevel=debug"
		},
		"logFile": {
			"short": "-f",
			"long": "--logFile",
			"value": "<file path>",
			"description": "Log to a specific file.",
			"deepDescription": "Log to a specific file.\n\tIf this option is not given, logs are not written to a file.",
			"example": "--logFile=../smfc-sample/log/smfc.log"
		},
		"logStdOut": {
			"short": "-O",
			"long": "--logStdOut",
			"value": "<status>",
			"description": "Log to console.",
			"deepDescription": "Log to console.\n\tIf this option is not given, logs are not printed on the console.",
			"example": "--logStdOut=true"
		},
		"channels": {
			"short": "-c",
			"long": "--channels",
			"value": "<channels>",
			"description": "Channels that will be publishing. ",
			"deepDescription": "Channels that will be publishing. If you want more than one channel, you can use ',' between channels.\n\tdefault channel is 'config.rau.currentReleaseChannel'that project.json\n\t Any one of the channels can not be empty.",
			"example": "smfc --task=publish:ios,android --channels test,production "
		},
		"playerPath": {
			"short": "-p",
			"long": "--playerPath",
			"value": "<player path>",
			"description": "It denotes the path of the android plugin apk or iOS player file.",
			"deepDescription": "It denotes the path of the android plugin apk or iOS player file.\n\t You should use it with 'generate_AndroidPluginZip' task. You can use it with 'create_iOSPlugin' task",
			"example": "smfc --task=generate_AndroidPluginZip --playerPath=../plugin.apk"
		}
	},
	"authentication": {
		"login": "Login for your licenses",
		"loguot": "Logout from cli, You can use only demo license",
		"description": " You can login to smartface Cli"
	},
	"help": {
		"short": "-h",
		"long": "--help",
		"value": "",
		"description": "General Help",
		"example": "smfc -h"
	},
	"version": {
		"short": "-v",
		"long": "--version",
		"value": "",
		"description": "Print smfc's version."
	},
	"color": {
		"options": "green",
		"assign": "gray",
		"value": "cyan",
		"title": "cyan",
		"description": "white"
	},
	"task": {
		"create_iOSPlugin": {
			"required": [
				"task"
			],
			"optional": [
				"path",
				"playerPath"
			],
			"description": "Create plugin template project",
			"deepDescription": "This command is used for creating iOS Plugin Template xCode Project. It is recommended to create the workspace folder first and then change directory (cd) into it.",
			"example": "smfc --task=create_iOSPlugin --path=../sample-plugin",
			"advancedExample": "smfc --task=create_iOSPlugin --path=../sample-plugin --playerPath=../../files/iOS_Player.zip"
		},
		"generate_iOSPluginZip": {
			"required": [
				"task"
			],
			"optional": [
				"path"
			],
			"description": "Generate iOS plugin zip file",
			"deepDescription": "After performing the necessary steps, plugin zip file can be created using this CLI command. Change directory (CD) to workspace folder or set 'path' parameter.",
			"example": "smfc --task=generate_iOSPluginZip",
			"advancedExample": "smfc --task=generate_iOSPluginZip --path=../sample-plugin"
		},
		"generate_AndroidPluginZip": {
			"required": [
				"task",
				"apkPath"
			],
			"optional": [
				"path",
				"Xmx",
				"platform",
				"projectRoot",
				"java",
				"logStdOut",
				"moveLib",
				"outputPath"
			],
			"description": "Generate Android plugin zip file",
			"deepDescription": "After performing the necessary steps, plugin zip file can be created using this CLI command. Change directory (CD) to workspace folder or set 'path' parameter.",
			"example": "smfc --task=generate_AndroidPluginZip --apkPath=../plugin.apk",
			"advancedExample": "smfc --task=generate_AndroidPluginZip --apkPath=../plugin.apk --path=../plugin --Xmx=200m --moveLib armeabi-v7a,armeabi"
		},
		"rau": {
			"description": "Publish for Remote App Uptade",
			"deepDescription": "This command is not supported as stand alone from shell."
		},
		"publish": {
			"required": [
				"task"
			],
			"optional": [
				"licenseFile",
				"java",
				"iosPlayer",
				"androidPlayer",
				"maxJavaMemory",
				"logLevel",
				"logFile",
				"logStdOut",
				"projectRoot",
				"channels"
			],
			"description": "Publish for iOS, Android",
			"deepDescription": "You can publish for iOS, Android. If you want most details, you can contact us.",
			"example": "smfc --task=publish:android,ios ",
			"advancedExample": "smfc --task=publish:android,ios --projectRoot=./workspace --channels test,production "
		},
		"test": {
			"description": "Sending outputs to testing distribution",
			"deepDescription": "This command is not supported as stand alone from shell.",
			"example": "",
			"advancedExample": ""
		},
		"enterprise": {
			"description": "Sending outputs to enterprise app store",
			"deepDescription": "This command is not supported as stand alone from shell.",
			"example": "",
			"advancedExample": ""
		},
		"storeSubmission": {
			"description": "Prepareing output for store submission",
			"deepDescription": "This command is not supported as stand alone from shell.",
			"example": "",
			"advancedExample": ""
		},
		"checkProject": {
			"required": [
				"task",
				"projectRoot"
			],
			"description": "Checks for project errors and warnings.",
			"deepDescription": "This command is called from the IDE(run on device, publish).",
			"example": "smfc --task=checkProject --projectRoot=/home/ubuntu/workspace/workspace",
			"advancedExample": "smfc --task=checkProject --projectRoot=/home/ubuntu/workspace/workspace"
		},
		"check_iOSConflict": {
			"required": [
				"task"
			],
			"description": "check_iOSConflict",
			"deepDescription": "check_iOSConflict",
			"example": "smfc --task check_iOSConflict",
			"advancedExample": "smfc --task check_iOSConflict"
		}
	}
}

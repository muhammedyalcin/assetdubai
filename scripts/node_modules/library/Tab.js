//------------------------------------------------------------------------------
//
//     This code was auto generated.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//------------------------------------------------------------------------------

const extend = require('js-base/core/extend');
const FlexLayout = extend(require('sf-core/ui/flexlayout'));
const Button = extend(require('sf-core/ui/button'));

function addChild(childName, ChildClass, componentInstance) {
  this.children = this.children || {};
  this.children[childName] = new ChildClass(componentInstance);
  if (this.layout)
    this.layout.addChild(this.children[childName]);
  else
    this.addChild(this.children[childName]);
}
//constructor
function Tab(_super, props) {
  // initalizes super class for this component scope
  _super(this, props);
  addChild.call(this, "tabLine", $Tab$$TabLine_, this);
  addChild.call(this, "tabButton", $Tab$$TabButton_, this);
}
Tab.$$styleContext = {
  classNames: ".flexLayout .flexLayout-another .tabBar_root",
  userProps: {
    width: null,
    height: 60,
    flexProps: {
      flexDirection: "COLUMN"
    }
  }
};
const Tab_ = FlexLayout(Tab);

function $Tab$$TabLine(_super, pageInstance) {
  _super(this);
  addChild.call(this, "tabIndicator", $Tab$$TabLine$$TabIndicator_, pageInstance);
  pageInstance.tabLine = this;
}
$Tab$$TabLine.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    width: null,
    height: 5,
    left: 0,
    right: 0,
    bottom: 0,
    flexProps: {
      positionType: "ABSOLUTE",
      justifyContent: "FLEX_END",
      flexDirection: "COLUMN"
    }
  }
};
const $Tab$$TabLine_ = FlexLayout($Tab$$TabLine);

function $Tab$$TabLine$$TabIndicator(_super, pageInstance) {
  _super(this);
  addChild.call(this, "tabPlaceHolderLeft", $Tab$$TabLine$$TabIndicator$$TabPlaceHolderLeft_, pageInstance);
  addChild.call(this, "tabHighlight", $Tab$$TabLine$$TabIndicator$$TabHighlight_, pageInstance);
  addChild.call(this, "tabPlaceHolderRight", $Tab$$TabLine$$TabIndicator$$TabPlaceHolderRight_, pageInstance);
  pageInstance.tabIndicator = this;
}
$Tab$$TabLine$$TabIndicator.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: null,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexDirection: "ROW_REVERSE",
      positionType: "RELATIVE",
      flexGrow: 1
    }
  }
};
const $Tab$$TabLine$$TabIndicator_ = FlexLayout($Tab$$TabLine$$TabIndicator);

function $Tab$$TabLine$$TabIndicator$$TabPlaceHolderLeft(_super, pageInstance) {
  _super(this);
  pageInstance.tabPlaceHolderLeft = this;
}
$Tab$$TabLine$$TabIndicator$$TabPlaceHolderLeft.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    height: null,
    flexProps: {
      flexGrow: 1
    }
  }
};
const $Tab$$TabLine$$TabIndicator$$TabPlaceHolderLeft_ = FlexLayout($Tab$$TabLine$$TabIndicator$$TabPlaceHolderLeft);

function $Tab$$TabLine$$TabIndicator$$TabHighlight(_super, pageInstance) {
  _super(this);
  pageInstance.tabHighlight = this;
}
$Tab$$TabLine$$TabIndicator$$TabHighlight.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    backgroundColor: "rgba( 208, 2, 27, 1 )",
    height: null,
    flexProps: {
      flexGrow: 1
    }
  }
};
const $Tab$$TabLine$$TabIndicator$$TabHighlight_ = FlexLayout($Tab$$TabLine$$TabIndicator$$TabHighlight);

function $Tab$$TabLine$$TabIndicator$$TabPlaceHolderRight(_super, pageInstance) {
  _super(this);
  pageInstance.tabPlaceHolderRight = this;
}
$Tab$$TabLine$$TabIndicator$$TabPlaceHolderRight.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: null,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexGrow: 0
    }
  }
};
const $Tab$$TabLine$$TabIndicator$$TabPlaceHolderRight_ = FlexLayout($Tab$$TabLine$$TabIndicator$$TabPlaceHolderRight);

function $Tab$$TabButton(_super, pageInstance) {
  _super(this);
  addChild.call(this, "instructionButton", $Tab$$TabButton$$InstructionButton_, pageInstance);
  addChild.call(this, "summaryButton", $Tab$$TabButton$$SummaryButton_, pageInstance);
  pageInstance.tabButton = this;
}
$Tab$$TabButton.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    bottom: 0,
    width: null,
    height: null,
    top: 0,
    left: 0,
    right: 0,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      positionType: "ABSOLUTE",
      flexDirection: "ROW_REVERSE"
    }
  }
};
const $Tab$$TabButton_ = FlexLayout($Tab$$TabButton);

function $Tab$$TabButton$$InstructionButton(_super, pageInstance) {
  _super(this, {
    text: "Instruction"
  });
  pageInstance.instructionButton = this;
}
$Tab$$TabButton$$InstructionButton.$$styleContext = {
  classNames: ".button",
  userProps: {
    width: null,
    height: null,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    textColor: "rgba( 213, 212, 212, 1 )",
    font: {
      family: "Lato"
    },
    flexProps: {
      flexGrow: 1
    }
  }
};
const $Tab$$TabButton$$InstructionButton_ = Button($Tab$$TabButton$$InstructionButton);

function $Tab$$TabButton$$SummaryButton(_super, pageInstance) {
  _super(this, {
    text: "Summary"
  });
  pageInstance.summaryButton = this;
}
$Tab$$TabButton$$SummaryButton.$$styleContext = {
  classNames: ".button",
  userProps: {
    width: null,
    height: null,
    textColor: "rgba( 208, 2, 27, 1 )",
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    font: {
      family: "Lato"
    },
    flexProps: {
      flexGrow: 1
    }
  }
};
const $Tab$$TabButton$$SummaryButton_ = Button($Tab$$TabButton$$SummaryButton);

module && (module.exports = Tab_);
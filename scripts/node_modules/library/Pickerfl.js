//------------------------------------------------------------------------------
//
//     This code was auto generated.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//------------------------------------------------------------------------------

const extend = require('js-base/core/extend');
const FlexLayout = extend(require('sf-core/ui/flexlayout'));
const ImageView = extend(require('sf-core/ui/imageview'));
const Label = extend(require('sf-core/ui/label'));

function addChild(childName, ChildClass, componentInstance) {
  this.children = this.children || {};
  this.children[childName] = new ChildClass(componentInstance);
  if (this.layout)
    this.layout.addChild(this.children[childName]);
  else
    this.addChild(this.children[childName]);
}
//constructor
function Pickerfl(_super, props) {
  // initalizes super class for this component scope
  _super(this, props);
  addChild.call(this, "labelImgfl", $Pickerfl$$LabelImgfl_, this);
  addChild.call(this, "line", $Pickerfl$$Line_, this);
}
Pickerfl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexDirection: "ROW"
    },
    height: 60,
    width: null
  }
};
const Pickerfl_ = FlexLayout(Pickerfl);

function $Pickerfl$$LabelImgfl(_super, pageInstance) {
  _super(this);
  addChild.call(this, "okimgfl", $Pickerfl$$LabelImgfl$$Okimgfl_, pageInstance);
  addChild.call(this, "labelfl", $Pickerfl$$LabelImgfl$$Labelfl_, pageInstance);
}
$Pickerfl$$LabelImgfl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    bottom: 1,
    flexProps: {
      positionType: "ABSOLUTE",
      justifyContent: "CENTER",
      flexDirection: "ROW"
    },
    height: null,
    left: 0,
    right: 0,
    top: 0,
    width: null
  }
};
const $Pickerfl$$LabelImgfl_ = FlexLayout($Pickerfl$$LabelImgfl);

function $Pickerfl$$LabelImgfl$$Okimgfl(_super, pageInstance) {
  _super(this);
  addChild.call(this, "okimgImageView", $Pickerfl$$LabelImgfl$$Okimgfl$$OkimgImageView_, pageInstance);
}
$Pickerfl$$LabelImgfl$$Okimgfl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    bottom: 0,
    flexProps: {
      positionType: "ABSOLUTE",
      justifyContent: "CENTER"
    },
    height: null,
    right: 0,
    top: 0,
    width: 50
  }
};
const $Pickerfl$$LabelImgfl$$Okimgfl_ = FlexLayout($Pickerfl$$LabelImgfl$$Okimgfl);

function $Pickerfl$$LabelImgfl$$Okimgfl$$OkimgImageView(_super, pageInstance) {
  _super(this);
}
$Pickerfl$$LabelImgfl$$Okimgfl$$OkimgImageView.$$styleContext = {
  classNames: ".imageView",
  userProps: {
    flexProps: {
      positionType: "ABSOLUTE"
    },
    height: 10,
    image: "downokicon.png",
    imageFillType: "STRETCH",
    width: 20
  }
};
const $Pickerfl$$LabelImgfl$$Okimgfl$$OkimgImageView_ = ImageView($Pickerfl$$LabelImgfl$$Okimgfl$$OkimgImageView);

function $Pickerfl$$LabelImgfl$$Labelfl(_super, pageInstance) {
  _super(this);
  addChild.call(this, "topLabel", $Pickerfl$$LabelImgfl$$Labelfl$$TopLabel_, pageInstance);
}
$Pickerfl$$LabelImgfl$$Labelfl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexGrow: 1
    },
    height: null,
    marginRight: 50,
    width: null
  }
};
const $Pickerfl$$LabelImgfl$$Labelfl_ = FlexLayout($Pickerfl$$LabelImgfl$$Labelfl);

function $Pickerfl$$LabelImgfl$$Labelfl$$TopLabel(_super, pageInstance) {
  _super(this, {
    text: "Example"
  });
  pageInstance.topLabel = this;
}
$Pickerfl$$LabelImgfl$$Labelfl$$TopLabel.$$styleContext = {
  classNames: ".label",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexGrow: 1
    },
    font: {
      family: "Lato",
      size: 14
    },
    height: null,
    textColor: "rgba( 74, 74, 74, 1 )",
    width: null
  }
};
const $Pickerfl$$LabelImgfl$$Labelfl$$TopLabel_ = Label($Pickerfl$$LabelImgfl$$Labelfl$$TopLabel);

function $Pickerfl$$Line(_super, pageInstance) {
  _super(this);
}
$Pickerfl$$Line.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    alpha: 0.31,
    backgroundColor: "rgba( 151, 151, 151, 1 )",
    bottom: 0,
    flexProps: {
      positionType: "ABSOLUTE"
    },
    height: 1,
    left: 0,
    right: 0,
    width: null
  }
};
const $Pickerfl$$Line_ = FlexLayout($Pickerfl$$Line);

module && (module.exports = Pickerfl_);
//------------------------------------------------------------------------------
//
//     This code was auto generated.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//------------------------------------------------------------------------------

const extend = require('js-base/core/extend');
const FlexLayout = extend(require('sf-core/ui/flexlayout'));
const ImageView = extend(require('sf-core/ui/imageview'));

function addChild(childName, ChildClass, componentInstance) {
  this.children = this.children || {};
  this.children[childName] = new ChildClass(componentInstance);
  if (this.layout)
    this.layout.addChild(this.children[childName]);
  else
    this.addChild(this.children[childName]);
}
//constructor
function UploadImgfl(_super, props) {
  // initalizes super class for this component scope
  _super(this, props);
  addChild.call(this, "uploadImg", $UploadImgfl$$UploadImg_, this);
}
UploadImgfl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    alpha: 0.31,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    borderColor: "rgba( 151, 151, 151, 0.5 )",
    borderWidth: 1,
    flexProps: {
      alignSelf: "AUTO",
      alignItems: "CENTER",
      justifyContent: "CENTER"
    },
    height: 80,
    width: 80
  }
};
const UploadImgfl_ = FlexLayout(UploadImgfl);

function $UploadImgfl$$UploadImg(_super, pageInstance) {
  _super(this);
  pageInstance.uploadImg = this;
}
$UploadImgfl$$UploadImg.$$styleContext = {
  classNames: ".imageView",
  userProps: {
    flexProps: {
      positionType: "RELATIVE",
      flexGrow: 1
    },
    height: null,
    width: null
  }
};
const $UploadImgfl$$UploadImg_ = ImageView($UploadImgfl$$UploadImg);

module && (module.exports = UploadImgfl_);
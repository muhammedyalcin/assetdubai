//------------------------------------------------------------------------------
//
//     This code was auto generated.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//------------------------------------------------------------------------------

const extend = require('js-base/core/extend');
const FlexLayout = extend(require('sf-core/ui/flexlayout'));
const Label = extend(require('sf-core/ui/label'));
const TextBox = extend(require('sf-core/ui/textbox'));

function addChild(childName, ChildClass, componentInstance) {
  this.children = this.children || {};
  this.children[childName] = new ChildClass(componentInstance);
  if (this.layout)
    this.layout.addChild(this.children[childName]);
  else
    this.addChild(this.children[childName]);
}
//constructor
function ClosureTimefl(_super, props) {
  // initalizes super class for this component scope
  _super(this, props);
  addChild.call(this, "closureLabel", $ClosureTimefl$$ClosureLabel_, this);
  addChild.call(this, "closureTextbox", $ClosureTimefl$$ClosureTextbox_, this);
  addChild.call(this, "line", $ClosureTimefl$$Line_, this);
  addChild.call(this, "refLabel", $ClosureTimefl$$RefLabel_, this);
}
ClosureTimefl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: 110,
    backgroundColor: "rgba( 255, 255, 255, 0 )"
  }
};
const ClosureTimefl_ = FlexLayout(ClosureTimefl);

function $ClosureTimefl$$ClosureLabel(_super, pageInstance) {
  _super(this, {
    text: "Closure Time"
  });
  pageInstance.closureLabel = this;
}
$ClosureTimefl$$ClosureLabel.$$styleContext = {
  classNames: ".label",
  userProps: {
    width: null,
    height: null,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    textColor: "rgba( 74, 74, 74, 1 )",
    font: {
      family: "Lato"
    },
    flexProps: {
      flexGrow: 1
    }
  }
};
const $ClosureTimefl$$ClosureLabel_ = Label($ClosureTimefl$$ClosureLabel);

function $ClosureTimefl$$ClosureTextbox(_super, pageInstance) {
  _super(this, {
    text: ""
  });
  pageInstance.closureTextbox = this;
}
$ClosureTimefl$$ClosureTextbox.$$styleContext = {
  classNames: ".textBox",
  userProps: {
    width: null,
    height: null,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexGrow: 1
    }
  }
};
const $ClosureTimefl$$ClosureTextbox_ = TextBox($ClosureTimefl$$ClosureTextbox);

function $ClosureTimefl$$Line(_super, pageInstance) {
  _super(this);
}
$ClosureTimefl$$Line.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: null,
    backgroundColor: "rgba( 151, 151, 151, 1 )",
    alpha: 0.32,
    flexProps: {
      positionType: "RELATIVE",
      flexGrow: 0.007
    }
  }
};
const $ClosureTimefl$$Line_ = FlexLayout($ClosureTimefl$$Line);

function $ClosureTimefl$$RefLabel(_super, pageInstance) {
  _super(this, {
    text: "Reference Time: 40 seconds"
  });
  pageInstance.refLabel = this;
}
$ClosureTimefl$$RefLabel.$$styleContext = {
  classNames: ".label",
  userProps: {
    width: null,
    height: null,
    textColor: "rgba( 151, 151, 151, 1 )",
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    font: {
      family: "Lato",
      size: 14
    },
    flexProps: {
      flexGrow: 1
    }
  }
};
const $ClosureTimefl$$RefLabel_ = Label($ClosureTimefl$$RefLabel);

module && (module.exports = ClosureTimefl_);
//------------------------------------------------------------------------------
//
//     This code was auto generated.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//------------------------------------------------------------------------------

const extend = require('js-base/core/extend');
const FlexLayout = extend(require('sf-core/ui/flexlayout'));
const Label = extend(require('sf-core/ui/label'));
const ImageView = extend(require('sf-core/ui/imageview'));
const Button = extend(require('sf-core/ui/button'));

function addChild(childName, ChildClass, componentInstance) {
  this.children = this.children || {};
  this.children[childName] = new ChildClass(componentInstance);
  if (this.layout)
    this.layout.addChild(this.children[childName]);
  else
    this.addChild(this.children[childName]);
}
//constructor
function ContactContainer(_super, props) {
  // initalizes super class for this component scope
  _super(this, props);
  addChild.call(this, "contactfl", $ContactContainer$$Contactfl_, this);
}
ContactContainer.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: 400,
    backgroundColor: "rgba( 255, 255, 255, 0 )"
  }
};
const ContactContainer_ = FlexLayout(ContactContainer);

function $ContactContainer$$Contactfl(_super, pageInstance) {
  _super(this);
  addChild.call(this, "contactfl", $ContactContainer$$Contactfl$$Contactfl_, pageInstance);
  addChild.call(this, "phonefl", $ContactContainer$$Contactfl$$Phonefl_, pageInstance);
  addChild.call(this, "addressfl", $ContactContainer$$Contactfl$$Addressfl_, pageInstance);
  addChild.call(this, "buttonfl", $ContactContainer$$Contactfl$$Buttonfl_, pageInstance);
  pageInstance.contactfl = this;
}
$ContactContainer$$Contactfl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: null,
    left: 10,
    right: 10,
    bottom: 10,
    top: 10,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      positionType: "ABSOLUTE"
    }
  }
};
const $ContactContainer$$Contactfl_ = FlexLayout($ContactContainer$$Contactfl);

function $ContactContainer$$Contactfl$$Contactfl(_super, pageInstance) {
  _super(this);
  addChild.call(this, "line", $ContactContainer$$Contactfl$$Contactfl$$Line_, pageInstance);
  addChild.call(this, "labelContainer", $ContactContainer$$Contactfl$$Contactfl$$LabelContainer_, pageInstance);
  pageInstance.contactfl = this;
}
$ContactContainer$$Contactfl$$Contactfl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: null,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexGrow: 0.5
    }
  }
};
const $ContactContainer$$Contactfl$$Contactfl_ = FlexLayout($ContactContainer$$Contactfl$$Contactfl);

function $ContactContainer$$Contactfl$$Contactfl$$Line(_super, pageInstance) {
  _super(this);
}
$ContactContainer$$Contactfl$$Contactfl$$Line.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: 1,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: "rgba( 151, 151, 151, 1 )",
    alpha: 0.31,
    flexProps: {
      positionType: "ABSOLUTE"
    }
  }
};
const $ContactContainer$$Contactfl$$Contactfl$$Line_ = FlexLayout($ContactContainer$$Contactfl$$Contactfl$$Line);

function $ContactContainer$$Contactfl$$Contactfl$$LabelContainer(_super, pageInstance) {
  _super(this);
  addChild.call(this, "contactLabel1", $ContactContainer$$Contactfl$$Contactfl$$LabelContainer$$ContactLabel1_, pageInstance);
  addChild.call(this, "contactLabel2", $ContactContainer$$Contactfl$$Contactfl$$LabelContainer$$ContactLabel2_, pageInstance);
}
$ContactContainer$$Contactfl$$Contactfl$$LabelContainer.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    width: null,
    height: null,
    left: 0,
    right: 0,
    top: 0,
    bottom: 1,
    flexProps: {
      positionType: "ABSOLUTE"
    }
  }
};
const $ContactContainer$$Contactfl$$Contactfl$$LabelContainer_ = FlexLayout($ContactContainer$$Contactfl$$Contactfl$$LabelContainer);

function $ContactContainer$$Contactfl$$Contactfl$$LabelContainer$$ContactLabel1(_super, pageInstance) {
  _super(this, {
    text: "CONTACT"
  });
  pageInstance.contactLabel1 = this;
}
$ContactContainer$$Contactfl$$Contactfl$$LabelContainer$$ContactLabel1.$$styleContext = {
  classNames: ".label",
  userProps: {
    width: null,
    height: null,
    textAlignment: "TOPLEFT",
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    textColor: "rgba( 74, 74, 74, 1 )",
    font: {
      family: "Lato"
    },
    flexProps: {
      flexGrow: 1
    }
  }
};
const $ContactContainer$$Contactfl$$Contactfl$$LabelContainer$$ContactLabel1_ = Label($ContactContainer$$Contactfl$$Contactfl$$LabelContainer$$ContactLabel1);

function $ContactContainer$$Contactfl$$Contactfl$$LabelContainer$$ContactLabel2(_super, pageInstance) {
  _super(this, {
    text: "Jon Smart"
  });
  pageInstance.contactLabel2 = this;
}
$ContactContainer$$Contactfl$$Contactfl$$LabelContainer$$ContactLabel2.$$styleContext = {
  classNames: ".label",
  userProps: {
    width: null,
    height: null,
    textAlignment: "TOPLEFT",
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    textColor: "rgba( 74, 74, 74, 1 )",
    font: {
      family: "Lato",
      size: 14
    },
    flexProps: {
      flexGrow: 1
    }
  }
};
const $ContactContainer$$Contactfl$$Contactfl$$LabelContainer$$ContactLabel2_ = Label($ContactContainer$$Contactfl$$Contactfl$$LabelContainer$$ContactLabel2);

function $ContactContainer$$Contactfl$$Phonefl(_super, pageInstance) {
  _super(this);
  addChild.call(this, "line", $ContactContainer$$Contactfl$$Phonefl$$Line_, pageInstance);
  addChild.call(this, "labelContainer", $ContactContainer$$Contactfl$$Phonefl$$LabelContainer_, pageInstance);
  pageInstance.phonefl = this;
}
$ContactContainer$$Contactfl$$Phonefl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: null,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexGrow: 0.5
    }
  }
};
const $ContactContainer$$Contactfl$$Phonefl_ = FlexLayout($ContactContainer$$Contactfl$$Phonefl);

function $ContactContainer$$Contactfl$$Phonefl$$Line(_super, pageInstance) {
  _super(this);
}
$ContactContainer$$Contactfl$$Phonefl$$Line.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: 1,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: "rgba( 151, 151, 151, 1 )",
    alpha: 0.31,
    flexProps: {
      positionType: "ABSOLUTE"
    }
  }
};
const $ContactContainer$$Contactfl$$Phonefl$$Line_ = FlexLayout($ContactContainer$$Contactfl$$Phonefl$$Line);

function $ContactContainer$$Contactfl$$Phonefl$$LabelContainer(_super, pageInstance) {
  _super(this);
  addChild.call(this, "phoneLblfl", $ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$PhoneLblfl_, pageInstance);
  addChild.call(this, "imgfl", $ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$Imgfl_, pageInstance);
  pageInstance.labelContainer = this;
}
$ContactContainer$$Contactfl$$Phonefl$$LabelContainer.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    width: null,
    height: null,
    left: 0,
    right: 0,
    top: 0,
    bottom: 1,
    flexProps: {
      positionType: "ABSOLUTE",
      flexDirection: "ROW"
    }
  }
};
const $ContactContainer$$Contactfl$$Phonefl$$LabelContainer_ = FlexLayout($ContactContainer$$Contactfl$$Phonefl$$LabelContainer);

function $ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$PhoneLblfl(_super, pageInstance) {
  _super(this);
  addChild.call(this, "phoneLabel1", $ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$PhoneLblfl$$PhoneLabel1_, pageInstance);
  addChild.call(this, "phoneLabel2", $ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$PhoneLblfl$$PhoneLabel2_, pageInstance);
  pageInstance.phoneLblfl = this;
}
$ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$PhoneLblfl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: null,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexGrow: 5
    }
  }
};
const $ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$PhoneLblfl_ = FlexLayout($ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$PhoneLblfl);

function $ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$PhoneLblfl$$PhoneLabel1(_super, pageInstance) {
  _super(this, {
    text: "PHONE"
  });
  pageInstance.phoneLabel1 = this;
}
$ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$PhoneLblfl$$PhoneLabel1.$$styleContext = {
  classNames: ".label",
  userProps: {
    width: null,
    height: null,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    textColor: "rgba( 74, 74, 74, 1 )",
    font: {
      family: "Lato"
    },
    flexProps: {
      flexGrow: 1
    }
  }
};
const $ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$PhoneLblfl$$PhoneLabel1_ = Label($ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$PhoneLblfl$$PhoneLabel1);

function $ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$PhoneLblfl$$PhoneLabel2(_super, pageInstance) {
  _super(this, {
    text: "+1 555-5555"
  });
  pageInstance.phoneLabel2 = this;
}
$ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$PhoneLblfl$$PhoneLabel2.$$styleContext = {
  classNames: ".label",
  userProps: {
    width: null,
    height: null,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    textColor: "rgba( 74, 74, 74, 1 )",
    font: {
      family: "Lato",
      size: 14
    },
    flexProps: {
      flexGrow: 1
    }
  }
};
const $ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$PhoneLblfl$$PhoneLabel2_ = Label($ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$PhoneLblfl$$PhoneLabel2);

function $ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$Imgfl(_super, pageInstance) {
  _super(this);
  addChild.call(this, "imgView", $ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$Imgfl$$ImgView_, pageInstance);
  pageInstance.imgfl = this;
}
$ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$Imgfl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: null,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexGrow: 1
    }
  }
};
const $ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$Imgfl_ = FlexLayout($ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$Imgfl);

function $ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$Imgfl$$ImgView(_super, pageInstance) {
  _super(this);
  pageInstance.imgView = this;
}
$ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$Imgfl$$ImgView.$$styleContext = {
  classNames: ".imageView",
  userProps: {
    width: null,
    height: null,
    image: "phoneicon.png",
    flexProps: {
      flexGrow: 1
    }
  }
};
const $ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$Imgfl$$ImgView_ = ImageView($ContactContainer$$Contactfl$$Phonefl$$LabelContainer$$Imgfl$$ImgView);

function $ContactContainer$$Contactfl$$Addressfl(_super, pageInstance) {
  _super(this);
  addChild.call(this, "line", $ContactContainer$$Contactfl$$Addressfl$$Line_, pageInstance);
  addChild.call(this, "labelContainer", $ContactContainer$$Contactfl$$Addressfl$$LabelContainer_, pageInstance);
  pageInstance.addressfl = this;
}
$ContactContainer$$Contactfl$$Addressfl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: null,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexGrow: 0.6
    }
  }
};
const $ContactContainer$$Contactfl$$Addressfl_ = FlexLayout($ContactContainer$$Contactfl$$Addressfl);

function $ContactContainer$$Contactfl$$Addressfl$$Line(_super, pageInstance) {
  _super(this);
}
$ContactContainer$$Contactfl$$Addressfl$$Line.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: 1,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: "rgba( 151, 151, 151, 1 )",
    alpha: 0.31,
    flexProps: {
      positionType: "ABSOLUTE"
    }
  }
};
const $ContactContainer$$Contactfl$$Addressfl$$Line_ = FlexLayout($ContactContainer$$Contactfl$$Addressfl$$Line);

function $ContactContainer$$Contactfl$$Addressfl$$LabelContainer(_super, pageInstance) {
  _super(this);
  addChild.call(this, "addressLabel1", $ContactContainer$$Contactfl$$Addressfl$$LabelContainer$$AddressLabel1_, pageInstance);
  addChild.call(this, "addressLabel2", $ContactContainer$$Contactfl$$Addressfl$$LabelContainer$$AddressLabel2_, pageInstance);
}
$ContactContainer$$Contactfl$$Addressfl$$LabelContainer.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    width: null,
    height: null,
    left: 0,
    right: 0,
    top: 0,
    bottom: 1,
    flexProps: {
      positionType: "ABSOLUTE"
    }
  }
};
const $ContactContainer$$Contactfl$$Addressfl$$LabelContainer_ = FlexLayout($ContactContainer$$Contactfl$$Addressfl$$LabelContainer);

function $ContactContainer$$Contactfl$$Addressfl$$LabelContainer$$AddressLabel1(_super, pageInstance) {
  _super(this, {
    text: "ADDRESS"
  });
  pageInstance.addressLabel1 = this;
}
$ContactContainer$$Contactfl$$Addressfl$$LabelContainer$$AddressLabel1.$$styleContext = {
  classNames: ".label",
  userProps: {
    width: null,
    height: null,
    textAlignment: "MIDLEFT",
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    textColor: "rgba( 74, 74, 74, 1 )",
    font: {
      family: "Lato"
    },
    flexProps: {
      flexGrow: 1
    }
  }
};
const $ContactContainer$$Contactfl$$Addressfl$$LabelContainer$$AddressLabel1_ = Label($ContactContainer$$Contactfl$$Addressfl$$LabelContainer$$AddressLabel1);

function $ContactContainer$$Contactfl$$Addressfl$$LabelContainer$$AddressLabel2(_super, pageInstance) {
  _super(this, {
    text: "East By Sub Station 121 Palo Alto, San Fransisco"
  });
  pageInstance.addressLabel2 = this;
}
$ContactContainer$$Contactfl$$Addressfl$$LabelContainer$$AddressLabel2.$$styleContext = {
  classNames: ".label",
  userProps: {
    width: null,
    height: null,
    textAlignment: "MIDLEFT",
    multiline: true,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    textColor: "rgba( 74, 74, 74, 1 )",
    font: {
      family: "Lato",
      size: 14
    },
    flexProps: {
      flexGrow: 1
    }
  }
};
const $ContactContainer$$Contactfl$$Addressfl$$LabelContainer$$AddressLabel2_ = Label($ContactContainer$$Contactfl$$Addressfl$$LabelContainer$$AddressLabel2);

function $ContactContainer$$Contactfl$$Buttonfl(_super, pageInstance) {
  _super(this);
  addChild.call(this, "labelContainer", $ContactContainer$$Contactfl$$Buttonfl$$LabelContainer_, pageInstance);
  pageInstance.buttonfl = this;
}
$ContactContainer$$Contactfl$$Buttonfl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: null,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexGrow: 1
    }
  }
};
const $ContactContainer$$Contactfl$$Buttonfl_ = FlexLayout($ContactContainer$$Contactfl$$Buttonfl);

function $ContactContainer$$Contactfl$$Buttonfl$$LabelContainer(_super, pageInstance) {
  _super(this);
  addChild.call(this, "directionsButton", $ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$DirectionsButton_, pageInstance);
  addChild.call(this, "placeHolder2", $ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$PlaceHolder2_, pageInstance);
  addChild.call(this, "updateButton", $ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$UpdateButton_, pageInstance);
  addChild.call(this, "placeHolder", $ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$PlaceHolder_, pageInstance);
  addChild.call(this, "viewWorkButton", $ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$ViewWorkButton_, pageInstance);
}
$ContactContainer$$Contactfl$$Buttonfl$$LabelContainer.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    width: null,
    height: null,
    flexProps: {
      positionType: "RELATIVE",
      justifyContent: "CENTER",
      alignItems: "STRETCH",
      flexGrow: 1
    }
  }
};
const $ContactContainer$$Contactfl$$Buttonfl$$LabelContainer_ = FlexLayout($ContactContainer$$Contactfl$$Buttonfl$$LabelContainer);

function $ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$DirectionsButton(_super, pageInstance) {
  _super(this, {
    text: "Directions To Site"
  });
  pageInstance.directionsButton = this;
}
$ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$DirectionsButton.$$styleContext = {
  classNames: ".button",
  userProps: {
    width: null,
    height: null,
    backgroundColor: "rgba( 208, 2, 27, 1 )",
    font: {
      family: "Lato"
    },
    flexProps: {
      flexGrow: 1
    }
  }
};
const $ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$DirectionsButton_ = Button($ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$DirectionsButton);

function $ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$PlaceHolder2(_super, pageInstance) {
  _super(this);
}
$ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$PlaceHolder2.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    height: null,
    width: null,
    flexProps: {
      flexGrow: 0.3
    }
  }
};
const $ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$PlaceHolder2_ = FlexLayout($ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$PlaceHolder2);

function $ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$UpdateButton(_super, pageInstance) {
  _super(this, {
    text: "Update Asset Location"
  });
  pageInstance.updateButton = this;
}
$ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$UpdateButton.$$styleContext = {
  classNames: ".button",
  userProps: {
    width: null,
    height: null,
    backgroundColor: "rgba( 208, 2, 27, 1 )",
    font: {
      family: "Lato"
    },
    flexProps: {
      flexGrow: 1
    }
  }
};
const $ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$UpdateButton_ = Button($ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$UpdateButton);

function $ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$PlaceHolder(_super, pageInstance) {
  _super(this);
}
$ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$PlaceHolder.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: null,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexGrow: 0.3
    }
  }
};
const $ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$PlaceHolder_ = FlexLayout($ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$PlaceHolder);

function $ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$ViewWorkButton(_super, pageInstance) {
  _super(this, {
    text: "View Work Orders for Assets"
  });
  pageInstance.viewWorkButton = this;
}
$ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$ViewWorkButton.$$styleContext = {
  classNames: ".button",
  userProps: {
    width: null,
    height: null,
    backgroundColor: "rgba( 208, 2, 27, 1 )",
    textColor: "rgba( 255, 255, 255, 1 )",
    font: {
      family: "Lato"
    },
    flexProps: {
      flexGrow: 1
    }
  }
};
const $ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$ViewWorkButton_ = Button($ContactContainer$$Contactfl$$Buttonfl$$LabelContainer$$ViewWorkButton);

module && (module.exports = ContactContainer_);
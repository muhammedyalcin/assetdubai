//------------------------------------------------------------------------------
//
//     This code was auto generated.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//------------------------------------------------------------------------------

const extend = require('js-base/core/extend');
const FlexLayout = extend(require('sf-core/ui/flexlayout'));
const Label = extend(require('sf-core/ui/label'));
const Switch = extend(require('sf-core/ui/switch'));

function addChild(childName, ChildClass, componentInstance) {
  this.children = this.children || {};
  this.children[childName] = new ChildClass(componentInstance);
  if (this.layout)
    this.layout.addChild(this.children[childName]);
  else
    this.addChild(this.children[childName]);
}
//constructor
function Notificaitonfl(_super, props) {
  // initalizes super class for this component scope
  _super(this, props);
  addChild.call(this, "line", $Notificaitonfl$$Line_, this);
  addChild.call(this, "notificationContainer", $Notificaitonfl$$NotificationContainer_, this);
}
Notificaitonfl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: 70,
    backgroundColor: "rgba( 255, 255, 255, 0 )"
  }
};
const Notificaitonfl_ = FlexLayout(Notificaitonfl);

function $Notificaitonfl$$Line(_super, pageInstance) {
  _super(this);
}
$Notificaitonfl$$Line.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    height: 1,
    width: null,
    left: 0,
    right: 0,
    bottom: 0,
    backgroundColor: "rgba( 61, 59, 58, 1 )",
    alpha: 0.31,
    flexProps: {
      positionType: "ABSOLUTE"
    }
  }
};
const $Notificaitonfl$$Line_ = FlexLayout($Notificaitonfl$$Line);

function $Notificaitonfl$$NotificationContainer(_super, pageInstance) {
  _super(this);
  addChild.call(this, "themeLabel", $Notificaitonfl$$NotificationContainer$$ThemeLabel_, pageInstance);
  addChild.call(this, "stylesfl", $Notificaitonfl$$NotificationContainer$$Stylesfl_, pageInstance);
  pageInstance.notificationContainer = this;
}
$Notificaitonfl$$NotificationContainer.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: null,
    left: 0,
    right: 0,
    top: 1,
    bottom: 1,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      positionType: "ABSOLUTE"
    }
  }
};
const $Notificaitonfl$$NotificationContainer_ = FlexLayout($Notificaitonfl$$NotificationContainer);

function $Notificaitonfl$$NotificationContainer$$ThemeLabel(_super, pageInstance) {
  _super(this, {
    text: "Notification"
  });
  pageInstance.themeLabel = this;
}
$Notificaitonfl$$NotificationContainer$$ThemeLabel.$$styleContext = {
  classNames: ".label",
  userProps: {
    width: null,
    height: null,
    left: 1,
    top: 1,
    bottom: 0,
    right: 90,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    font: {
      family: "Lato"
    },
    flexProps: {
      positionType: "ABSOLUTE"
    }
  }
};
const $Notificaitonfl$$NotificationContainer$$ThemeLabel_ = Label($Notificaitonfl$$NotificationContainer$$ThemeLabel);

function $Notificaitonfl$$NotificationContainer$$Stylesfl(_super, pageInstance) {
  _super(this);
  addChild.call(this, "notificationSwitch", $Notificaitonfl$$NotificationContainer$$Stylesfl$$NotificationSwitch_, pageInstance);
}
$Notificaitonfl$$NotificationContainer$$Stylesfl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: 70,
    height: null,
    right: 0,
    bottom: 0,
    top: 0,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      positionType: "ABSOLUTE",
      flexDirection: "ROW",
      justifyContent: "FLEX_START",
      alignItems: "CENTER"
    }
  }
};
const $Notificaitonfl$$NotificationContainer$$Stylesfl_ = FlexLayout($Notificaitonfl$$NotificationContainer$$Stylesfl);

function $Notificaitonfl$$NotificationContainer$$Stylesfl$$NotificationSwitch(_super, pageInstance) {
  _super(this);
  pageInstance.notificationSwitch = this;
}
$Notificaitonfl$$NotificationContainer$$Stylesfl$$NotificationSwitch.$$styleContext = {
  classNames: ".switch",
  userProps: {
    width: null,
    thumbOffColor: "rgba( 208, 2, 27, 1 )",
    flexProps: {
      flexGrow: 1,
      alignSelf: "AUTO"
    }
  }
};
const $Notificaitonfl$$NotificationContainer$$Stylesfl$$NotificationSwitch_ = Switch($Notificaitonfl$$NotificationContainer$$Stylesfl$$NotificationSwitch);

module && (module.exports = Notificaitonfl_);
//------------------------------------------------------------------------------
//
//     This code was auto generated.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//------------------------------------------------------------------------------

const extend = require('js-base/core/extend');
const FlexLayout = extend(require('sf-core/ui/flexlayout'));
const Label = extend(require('sf-core/ui/label'));

function addChild(childName, ChildClass, componentInstance) {
  this.children = this.children || {};
  this.children[childName] = new ChildClass(componentInstance);
  if (this.layout)
    this.layout.addChild(this.children[childName]);
  else
    this.addChild(this.children[childName]);
}
//constructor
function WorkSummary(_super, props) {
  // initalizes super class for this component scope
  _super(this, props);
  addChild.call(this, "summaryCnr", $WorkSummary$$SummaryCnr_, this);
}
WorkSummary.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    height: 80,
    width: null
  }
};
const WorkSummary_ = FlexLayout(WorkSummary);

function $WorkSummary$$SummaryCnr(_super, pageInstance) {
  _super(this, {
    id: 20
  });
  addChild.call(this, "summaryFlexLayout", $WorkSummary$$SummaryCnr$$SummaryFlexLayout_, pageInstance);
  pageInstance.summaryCnr = this;
}
$WorkSummary$$SummaryCnr.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    bottom: 0,
    flexProps: {
      positionType: "ABSOLUTE"
    },
    height: null,
    left: 0,
    right: 0,
    top: 10,
    width: null
  }
};
const $WorkSummary$$SummaryCnr_ = FlexLayout($WorkSummary$$SummaryCnr);

function $WorkSummary$$SummaryCnr$$SummaryFlexLayout(_super, pageInstance) {
  _super(this, {
    id: 200
  });
  addChild.call(this, "labelContainer", $WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer_, pageInstance);
  addChild.call(this, "smLine", $WorkSummary$$SummaryCnr$$SummaryFlexLayout$$SmLine_, pageInstance);
  pageInstance.summaryFlexLayout = this;
}
$WorkSummary$$SummaryCnr$$SummaryFlexLayout.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexGrow: 1
    },
    height: null,
    width: null
  }
};
const $WorkSummary$$SummaryCnr$$SummaryFlexLayout_ = FlexLayout($WorkSummary$$SummaryCnr$$SummaryFlexLayout);

function $WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer(_super, pageInstance) {
  _super(this, {
    id: 201
  });
  addChild.call(this, "labels", $WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer$$Labels_, pageInstance);
  pageInstance.labelContainer = this;
}
$WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    bottom: 9,
    flexProps: {
      positionType: "ABSOLUTE"
    },
    height: null,
    left: 0,
    right: 0,
    top: 0,
    width: null
  }
};
const $WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer_ = FlexLayout($WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer);

function $WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer$$Labels(_super, pageInstance) {
  _super(this, {
    id: 202
  });
  addChild.call(this, "id2", $WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer$$Labels$$Id2_, pageInstance);
  addChild.call(this, "id1", $WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer$$Labels$$Id1_, pageInstance);
  pageInstance.labels = this;
}
$WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer$$Labels.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexGrow: 1
    },
    height: null,
    width: null
  }
};
const $WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer$$Labels_ = FlexLayout($WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer$$Labels);

function $WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer$$Labels$$Id2(_super, pageInstance) {
  _super(this, {
    id: 204,
    text: "SDV 6001"
  });
  pageInstance.id2 = this;
}
$WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer$$Labels$$Id2.$$styleContext = {
  classNames: ".label",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexGrow: 1
    },
    font: {
      family: "Lato",
      size: 18
    },
    height: null,
    textAlignment: "MIDLEFT",
    textColor: "rgba( 74, 74, 74, 1 )",
    width: null
  }
};
const $WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer$$Labels$$Id2_ = Label($WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer$$Labels$$Id2);

function $WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer$$Labels$$Id1(_super, pageInstance) {
  _super(this, {
    id: 203,
    text: "Test Passing"
  });
  pageInstance.id1 = this;
}
$WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer$$Labels$$Id1.$$styleContext = {
  classNames: ".label",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexGrow: 1
    },
    font: {
      family: "Lato",
      size: 14
    },
    height: null,
    textAlignment: "MIDLEFT",
    textColor: "rgba( 92, 92, 92, 1 )",
    width: null
  }
};
const $WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer$$Labels$$Id1_ = Label($WorkSummary$$SummaryCnr$$SummaryFlexLayout$$LabelContainer$$Labels$$Id1);

function $WorkSummary$$SummaryCnr$$SummaryFlexLayout$$SmLine(_super, pageInstance) {
  _super(this, {
    id: 999
  });
  pageInstance.smLine = this;
}
$WorkSummary$$SummaryCnr$$SummaryFlexLayout$$SmLine.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    alpha: 0.31,
    backgroundColor: "rgba( 151, 151, 151, 1 )",
    bottom: 0,
    flexProps: {
      positionType: "ABSOLUTE"
    },
    height: 1,
    left: 0,
    right: 0,
    top: null,
    width: null
  }
};
const $WorkSummary$$SummaryCnr$$SummaryFlexLayout$$SmLine_ = FlexLayout($WorkSummary$$SummaryCnr$$SummaryFlexLayout$$SmLine);

module && (module.exports = WorkSummary_);
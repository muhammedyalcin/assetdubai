//------------------------------------------------------------------------------
//
//     This code was auto generated.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//------------------------------------------------------------------------------

const extend = require('js-base/core/extend');
const FlexLayout = extend(require('sf-core/ui/flexlayout'));
const Label = extend(require('sf-core/ui/label'));
const ListView = extend(require('sf-core/ui/listview'));
const ListViewItem = extend(require('sf-core/ui/listviewitem'));

function addChild(childName, ChildClass, componentInstance) {
  this.children = this.children || {};
  this.children[childName] = new ChildClass(componentInstance);
  if (this.layout)
    this.layout.addChild(this.children[childName]);
  else
    this.addChild(this.children[childName]);
}
//constructor
function WorkOrdersSumfl(_super, props) {
  // initalizes super class for this component scope
  _super(this, props);
  addChild.call(this, "equipfl", $WorkOrdersSumfl$$Equipfl_, this);
  addChild.call(this, "workOrderSumListView", $WorkOrdersSumfl$$WorkOrderSumListView_, this);
}
WorkOrdersSumfl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 155, 155, 155, 1 )",
    flexProps: {
      positionType: "ABSOLUTE"
    },
    height: null,
    width: null
  }
};
const WorkOrdersSumfl_ = FlexLayout(WorkOrdersSumfl);

function $WorkOrdersSumfl$$Equipfl(_super, pageInstance) {
  _super(this);
  addChild.call(this, "lablel1", $WorkOrdersSumfl$$Equipfl$$Lablel1_, pageInstance);
  addChild.call(this, "label2", $WorkOrdersSumfl$$Equipfl$$Label2_, pageInstance);
  addChild.call(this, "line", $WorkOrdersSumfl$$Equipfl$$Line_, pageInstance);
  pageInstance.equipfl = this;
}
$WorkOrdersSumfl$$Equipfl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 155, 155, 155, 1 )",
    flexProps: {
      alignItems: "STRETCH",
      alignContent: "STRETCH",
      positionType: "RELATIVE"
    },
    height: 80,
    width: null
  }
};
const $WorkOrdersSumfl$$Equipfl_ = FlexLayout($WorkOrdersSumfl$$Equipfl);

function $WorkOrdersSumfl$$Equipfl$$Lablel1(_super, pageInstance) {
  _super(this, {
    text: "EQUIPMENT REQUIRED"
  });
  pageInstance.lablel1 = this;
}
$WorkOrdersSumfl$$Equipfl$$Lablel1.$$styleContext = {
  classNames: ".label",
  userProps: {
    flexProps: {
      flexGrow: 1
    },
    font: {
      family: "Lato",
      size: 18
    },
    height: null,
    textColor: "rgba( 74, 74, 74, 1 )",
    width: null
  }
};
const $WorkOrdersSumfl$$Equipfl$$Lablel1_ = Label($WorkOrdersSumfl$$Equipfl$$Lablel1);

function $WorkOrdersSumfl$$Equipfl$$Label2(_super, pageInstance) {
  _super(this, {
    text: "GSM kit(Thermal Camera, RF Scanner)"
  });
  pageInstance.label2 = this;
}
$WorkOrdersSumfl$$Equipfl$$Label2.$$styleContext = {
  classNames: ".label",
  userProps: {
    flexProps: {
      flexGrow: 1
    },
    font: {
      family: "Lato",
      size: 14
    },
    height: null,
    textColor: "rgba( 92, 92, 92, 1 )",
    width: null
  }
};
const $WorkOrdersSumfl$$Equipfl$$Label2_ = Label($WorkOrdersSumfl$$Equipfl$$Label2);

function $WorkOrdersSumfl$$Equipfl$$Line(_super, pageInstance) {
  _super(this);
}
$WorkOrdersSumfl$$Equipfl$$Line.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    alpha: 0.31,
    backgroundColor: "rgba( 151, 151, 151, 1 )",
    bottom: 0,
    flexProps: {
      positionType: "ABSOLUTE"
    },
    height: 1,
    left: 0,
    right: 0,
    width: null
  }
};
const $WorkOrdersSumfl$$Equipfl$$Line_ = FlexLayout($WorkOrdersSumfl$$Equipfl$$Line);

function $WorkOrdersSumfl$$WorkOrderSumListView(_super, pageInstance) {
  _super(this, {
    itemCount: NaN,
    rowHeight: 70
  });
  this.onRowCreate = function() {
    return new ListViewItem();
  };
  pageInstance.workOrderSumListView = this;
}
$WorkOrdersSumfl$$WorkOrderSumListView.$$styleContext = {
  classNames: ".listView",
  userProps: {
    flexProps: {
      flexGrow: 1
    },
    height: null,
    width: null
  }
};
const $WorkOrdersSumfl$$WorkOrderSumListView_ = ListView($WorkOrdersSumfl$$WorkOrderSumListView);

module && (module.exports = WorkOrdersSumfl_);
//------------------------------------------------------------------------------
//
//     This code was auto generated.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//------------------------------------------------------------------------------

const extend = require('js-base/core/extend');
const FlexLayout = extend(require('sf-core/ui/flexlayout'));
const Button = extend(require('sf-core/ui/button'));
const Label = extend(require('sf-core/ui/label'));

function addChild(childName, ChildClass, componentInstance) {
  this.children = this.children || {};
  this.children[childName] = new ChildClass(componentInstance);
  if (this.layout)
    this.layout.addChild(this.children[childName]);
  else
    this.addChild(this.children[childName]);
}
//constructor
function Yesnofl(_super, props) {
  // initalizes super class for this component scope
  _super(this, props);
  addChild.call(this, "yesfl", $Yesnofl$$Yesfl_, this);
  addChild.call(this, "nofl", $Yesnofl$$Nofl_, this);
}
Yesnofl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    width: null,
    height: 70,
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexDirection: "ROW"
    }
  }
};
const Yesnofl_ = FlexLayout(Yesnofl);

function $Yesnofl$$Yesfl(_super, pageInstance) {
  _super(this);
  addChild.call(this, "yesButton", $Yesnofl$$Yesfl$$YesButton_, pageInstance);
  addChild.call(this, "yesLabel", $Yesnofl$$Yesfl$$YesLabel_, pageInstance);
}
$Yesnofl$$Yesfl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    width: null,
    height: null,
    flexProps: {
      flexGrow: 1,
      flexDirection: "ROW",
      justifyContent: "FLEX_START",
      alignSelf: "AUTO",
      alignItems: "CENTER"
    }
  }
};
const $Yesnofl$$Yesfl_ = FlexLayout($Yesnofl$$Yesfl);

function $Yesnofl$$Yesfl$$YesButton(_super, pageInstance) {
  _super(this, {
    text: ""
  });
  pageInstance.yesButton = this;
}
$Yesnofl$$Yesfl$$YesButton.$$styleContext = {
  classNames: ".button",
  userProps: {
    width: 20,
    height: 20,
    borderRadius: 10,
    borderWidth: 1,
    borderColor: "rgba( 155, 155, 155, 1 )",
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    textColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      alignSelf: "AUTO"
    }
  }
};
const $Yesnofl$$Yesfl$$YesButton_ = Button($Yesnofl$$Yesfl$$YesButton);

function $Yesnofl$$Yesfl$$YesLabel(_super, pageInstance) {
  _super(this, {
    text: "Yes"
  });
  pageInstance.yesLabel = this;
}
$Yesnofl$$Yesfl$$YesLabel.$$styleContext = {
  classNames: ".label",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    width: null,
    left: 30,
    top: 0,
    right: 0,
    bottom: 0,
    height: null,
    textColor: "rgba( 74, 74, 74, 1 )",
    font: {
      family: "Lato",
      size: 14
    },
    flexProps: {
      positionType: "ABSOLUTE"
    }
  }
};
const $Yesnofl$$Yesfl$$YesLabel_ = Label($Yesnofl$$Yesfl$$YesLabel);

function $Yesnofl$$Nofl(_super, pageInstance) {
  _super(this);
  addChild.call(this, "noButton", $Yesnofl$$Nofl$$NoButton_, pageInstance);
  addChild.call(this, "noLabel", $Yesnofl$$Nofl$$NoLabel_, pageInstance);
  pageInstance.nofl = this;
}
$Yesnofl$$Nofl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    width: null,
    height: null,
    flexProps: {
      flexGrow: 1.5,
      flexDirection: "ROW",
      justifyContent: "FLEX_START",
      alignSelf: "AUTO",
      alignItems: "CENTER"
    }
  }
};
const $Yesnofl$$Nofl_ = FlexLayout($Yesnofl$$Nofl);

function $Yesnofl$$Nofl$$NoButton(_super, pageInstance) {
  _super(this, {
    text: ""
  });
  pageInstance.noButton = this;
}
$Yesnofl$$Nofl$$NoButton.$$styleContext = {
  classNames: ".button",
  userProps: {
    width: 20,
    height: 20,
    borderRadius: 10,
    borderWidth: 1,
    borderColor: "rgba( 155, 155, 155, 1 )",
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    textColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      alignSelf: "AUTO"
    }
  }
};
const $Yesnofl$$Nofl$$NoButton_ = Button($Yesnofl$$Nofl$$NoButton);

function $Yesnofl$$Nofl$$NoLabel(_super, pageInstance) {
  _super(this, {
    text: "No"
  });
  pageInstance.noLabel = this;
}
$Yesnofl$$Nofl$$NoLabel.$$styleContext = {
  classNames: ".label",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    width: null,
    height: null,
    bottom: 0,
    left: 30,
    top: 0,
    right: 0,
    textColor: "rgba( 74, 74, 74, 1 )",
    font: {
      family: "Lato",
      size: 14
    },
    flexProps: {
      positionType: "ABSOLUTE"
    }
  }
};
const $Yesnofl$$Nofl$$NoLabel_ = Label($Yesnofl$$Nofl$$NoLabel);

module && (module.exports = Yesnofl_);
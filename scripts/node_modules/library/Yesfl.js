//------------------------------------------------------------------------------
//
//     This code was auto generated.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//------------------------------------------------------------------------------

const extend = require('js-base/core/extend');
const FlexLayout = extend(require('sf-core/ui/flexlayout'));
const Button = extend(require('sf-core/ui/button'));
const Label = extend(require('sf-core/ui/label'));

function addChild(childName, ChildClass, componentInstance) {
  this.children = this.children || {};
  this.children[childName] = new ChildClass(componentInstance);
  if (this.layout)
    this.layout.addChild(this.children[childName]);
  else
    this.addChild(this.children[childName]);
}
//constructor
function Yesfl(_super, props) {
  // initalizes super class for this component scope
  _super(this, props);
  addChild.call(this, "radioButton", $Yesfl$$RadioButton_, this);
  addChild.call(this, "yesLabel", $Yesfl$$YesLabel_, this);
}
Yesfl.$$styleContext = {
  classNames: ".flexLayout",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      justifyContent: "CENTER",
      flexDirection: "ROW"
    },
    height: 50,
    width: 80
  }
};
const Yesfl_ = FlexLayout(Yesfl);

function $Yesfl$$RadioButton(_super, pageInstance) {
  _super(this, {
    text: ""
  });
  pageInstance.radioButton = this;
}
$Yesfl$$RadioButton.$$styleContext = {
  classNames: ".button",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    borderColor: "rgba( 155, 155, 155, 1 )",
    borderRadius: 10,
    borderWidth: 1,
    flexProps: {
      alignSelf: "CENTER"
    },
    height: 20,
    width: 20
  }
};
const $Yesfl$$RadioButton_ = Button($Yesfl$$RadioButton);

function $Yesfl$$YesLabel(_super, pageInstance) {
  _super(this, {
    text: "Yes"
  });
  pageInstance.yesLabel = this;
}
$Yesfl$$YesLabel.$$styleContext = {
  classNames: ".label",
  userProps: {
    backgroundColor: "rgba( 255, 255, 255, 0 )",
    flexProps: {
      flexGrow: 1
    },
    font: {
      family: "Lato",
      size: 14
    },
    height: null,
    marginLeft: 10,
    textColor: "rgba( 74, 74, 74, 1 )",
    width: null
  }
};
const $Yesfl$$YesLabel_ = Label($Yesfl$$YesLabel);

module && (module.exports = Yesfl_);
(function (global, factory) {
    if (typeof define === "function" && define.amd) {
        define(["module", "exports"], factory);
    } else if (typeof exports !== "undefined") {
        factory(module, exports);
    } else {
        var mod = {
            exports: {}
        };
        factory(mod, mod.exports);
        global.addChild = mod.exports;
    }
})(this, function (module, exports) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.default = addChild;
    /**
     * Add context child action
     * 
     * @param {string} name - Context name of the root component
     * @param {Object} component - Specified component
     * @param {string} classnames - Component classnames
     * @param {Object} userProps - Initial properties of the specified component
     * 
     * @returns {Object}
     */
    function addChild(name, component) {
        var classNames = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";
        var userStyle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

        return {
            type: "addChild",
            name: name,
            component: component,
            classNames: classNames,
            userStyle: userStyle
        };
    };
    module.exports = exports["default"];
});